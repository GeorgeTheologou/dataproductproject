A reactive property map, made with Shiny, leaflet and plotly
========================================================
author: Spyros Marketos
date: 27/11/2016
autosize: true
transition: rotate

What can you do in the app?
========================================================

- Navigate the map, click through clusters of properties
- Get price for individual marker (property)
- Change the style of the map reactively
- Set the number of properties
- Set the range of the prices
- Explore the actual distribution of prices 
- Observe code execution as it happens


From ggplot2 to plotly (example)
========================================================

```{r, message= FALSE, echo=FALSE}
library(webshot)
library(leaflet)
library(tidyverse)

df <- read_csv("../data/processed/airlinesbyairport.csv")  
min = 1
max = 900
filtered_df <- df%>%filter(count >= min & count <= max)
filtered_df <- filtered_df%>%select(latitude,longitude)

greenLeafIcon <- makeIcon(
  iconUrl = "http://seeklogo.com/images/D/departure-flights-airport-sign-logo-A9A341DA0F-seeklogo.com.gif",
  iconWidth = 22, iconHeight = 22,
  iconAnchorX = 22, iconAnchorY = 22
  )

airportnames <- df%>%mutate(labels=paste(airportname))%>%select(labels)
airlines <- df%>%mutate(labels=paste(count))%>%select(labels)
print(airlines)
```

```{r, eval=TRUE}
my_map <- leaflet() %>%
addProviderTiles( "OpenStreetMap.HOT",options = providerTileOptions(noWrap = TRUE)) %>%
addMarkers(data = filtered_df, clusterOptions = markerClusterOptions(), icon = greenLeafIcon,popup = paste("<strong>Airport name: </strong>","<br>",as.character(airportnames$labels),"<br>","<hr>", "<em>Airlines flying: </em>","<br>","<em>",as.character(airlines$labels),"</em>"))
```

```{r, echo=FALSE}
my_map
```

Using shiny, leaflet and plotly together
========================================================

- Shiny hosts the control widgets 

- Leaflet uses data interacting with Shiny's control widgets to generate the map

- plotly visualises the output of the interactions converting a ggplot2 object to an interactive visualisation


Conclusion and links
========================================================
Thanks for having a look! 

- You can see the app in action here:
https://spymark.shinyapps.io/reactive_leaflet/

- Here is the link to the github repo that contains all the code
https://github.com/spymark/data_products_proj

